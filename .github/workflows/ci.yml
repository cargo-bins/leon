name: CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      additional_key:
        required: true
        type: string
        default: ""
  merge_group:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - SUPPORT.md

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.event.pull_request.number || github.sha }}-${{ inputs.additional_key }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  JUST_ENABLE_H3: true
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 4
  CARGO_PROFILE_DEV_CODEGEN_UNITS: 4
  CARGO_PROFILE_CHECK_ONLY_CODEGEN_UNITS: 4

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2

    - run: cargo test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - run: rustup component add rustfmt clippy

    - uses: Swatinem/rust-cache@v2

    - run: cargo fmt --check

    - run: cargo clippy --no-deps

  fuzz:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - run: rustup toolchain install nightly --profile minimal --no-self-update --component rust-src

    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-fuzz

    - uses: Swatinem/rust-cache@v2

    - run: |
        cd crates/leon/fuzz && cargo +nightly fuzz run parser --careful --jobs $(nproc) -- -max_total_time=60

  # Dummy job to have a stable name for the "all tests pass" requirement
  tests-pass:
    name: Tests pass
    needs:
    - test
    - lint
    - fuzz
    if: always() # always run even if dependencies fail
    runs-on: ubuntu-latest
    steps:
    # fail if ANY dependency has failed or cancelled
    - if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')"
      run: exit 1
    - run: exit 0
